{"version":3,"sources":["components/Users/TablePeople.js","api/users.js","components/Users/NewPerson.js","components/Users/PeoplePage.js","components/Courses/TableCourses.js","api/courses.js","components/Courses/NewCourses.js","components/Courses/CoursesPage.js","App.js","serviceWorker.js","index.js"],"names":["TablePeople","people","setSortBy","deletePeople","className","onClick","map","person","key","id","name","email","username","class","users","NewPerson","formSubmit","bind","event","preventDefault","form","target","elements","value","this","props","addPerson","reset","onSubmit","type","defaultValue","placeholder","required","Component","PeoplePage","useEffect","setPeople","useState","prevPeople","Math","max","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","query","get","visiblePeople","filter","toLowerCase","includes","onChange","set","push","toString","to","exact","path","render","selectParams","sort","a","b","localeCompare","TableCourses","courses","deleteCourse","cours","title","completed","duration","NewCourses","CoursesPage","setCours","addCourses","prevCourse","visibleCourse","i","item","App","component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRA2CeA,EAzCK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACxC,OACE,6BACE,yBAAKC,UAAU,gBACb,2BAAOA,UAAU,qBACf,+BACE,4BACE,wBAAIC,QAAS,kBAAMH,EAAU,QAA7B,MACA,wBAAIG,QAAS,kBAAMH,EAAU,UAA7B,QACA,wBAAIG,QAAS,kBAAMH,EAAU,WAA7B,SACA,wBAAIG,QAAS,kBAAMH,EAAU,cAA7B,eAGJ,+BACGD,EAAOK,KAAI,SAACC,GAAD,OACV,wBAAIC,IAAKD,EAAOE,IACd,4BAAKF,EAAOE,IACZ,gCAAMF,EAAOG,MACb,gCAAMH,EAAOI,OACb,4BAAMJ,EAAOK,UACb,wBAAIP,QAAS,kBAAIF,EAAaI,EAAOE,MACrC,uBAAGL,UAAU,0BAEb,4BACE,uBAAGS,MAAM,wBCyCVC,EAnEH,CACV,CACEL,GAAI,EACJC,KAAM,gBACNE,SAAU,OACVD,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNE,SAAU,YACVD,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNE,SAAU,WACVD,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNE,SAAU,WACVD,MAAO,6BAGT,CACEF,GAAI,EACJC,KAAM,mBACNE,SAAU,SACVD,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNE,SAAU,mBACVD,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNE,SAAU,eACVD,MAAO,0BAGT,CACEF,GAAI,EACJC,KAAM,2BACNE,SAAU,gBACVD,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNE,SAAU,WACVD,MAAO,2BAGT,CACEF,GAAI,GACJC,KAAM,qBACNE,SAAU,iBACVD,MAAO,2B,+CCLEI,E,YAtDb,aAAe,IAAD,8BACZ,+CACKC,WAAa,EAAKA,WAAWC,KAAhB,gBAFN,E,wEAKHC,GACTA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbX,EAAOU,EAAKE,SAAL,KAAsBC,MAC7BZ,EAAQS,EAAKE,SAAL,MAAuBC,MAC/BX,EAAWQ,EAAKE,SAAL,SAA0BC,MAC3CC,KAAKC,MAAMC,UAAUhB,EAAMC,EAAMC,GACjCQ,EAAKO,U,+BAIL,OACE,0BAAMC,SAAUJ,KAAKR,YACnB,yBAAKH,MAAM,YACX,2BACEJ,GAAG,OACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,UACZC,UAAQ,KAGV,yBAAKnB,MAAM,YACX,2BACEJ,GAAG,QACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,WACZC,UAAQ,KAGV,yBAAKnB,MAAM,YACV,2BACCJ,GAAG,WACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,eAGd,4BAAQlB,MAAM,kBACdgB,KAAK,UACX,uBAAGhB,MAAM,cAFH,Y,GA7CgBoB,aC8FTC,EAzFI,WACjBC,qBAAU,WACPC,EAAUtB,KACV,IAHoB,MAKKuB,mBAAS,IALd,mBAKhBpC,EALgB,KAKRmC,EALQ,KAQjBV,EAAU,SAAChB,EAAMC,EAAMC,GAC3BwB,GAAU,SAAAE,GAAU,4BAAQA,GAAR,CAAoB,CACtC5B,OAAMC,QAAMC,WACZH,GACE8B,KAAKC,IAAL,MAAAD,KAAI,YAAQD,EAAWhC,KAAI,SAAAC,GAAM,OAAIA,EAAOE,QAAO,SAsBnDgC,EAAWC,cACXC,EAAUC,cACVC,EAAe,IAAIC,gBAAgBL,EAASM,QAE5CC,EAAQH,EAAaI,IAAI,UAAY,GAgBrCC,EAAgBF,EAFpB/C,EAAOkD,QAAO,SAAA5C,GAAM,OAAKA,EAAOG,MAAQ,IAAI0C,cAAcC,SAASL,MAE1C,YAAwB/C,GAEnD,OACE,6BACE,yBAAKG,UAAU,sBACb,2BACEyB,KAAK,OACLE,YAAY,YACZR,MAAOyB,EACPM,SAxBiB,SAACpC,GACxB2B,EAAaU,IAAI,QAASrC,EAAMG,OAAOE,MAAM6B,eAC7CT,EAAQa,KAAK,CACXT,OAAQF,EAAaY,gBAuBnB,uBAAGrD,UAAU,gBAEf,kBAAC,IAAD,KACA,uBAAGA,UAAU,sBACX,kBAAC,IAAD,CAASA,UAAU,OAAOsD,GAAG,kBAAkBC,OAAK,GAApD,QAEF,kBAAC,IAAD,CACUC,KAAK,kBACLC,OAAQ,kBACN,kBAAC,EAAD,CACCnC,UAAWA,QAKxB,kBAAC,EAAD,CACAxB,UAjEc,SAAC4D,GACjB,OAAQA,GACN,IAAK,OACL,IAAK,WACL,IAAK,QACH1B,EAAU,YAAInC,GACX8D,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAcI,cAAcD,EAAEH,QAClD,MACF,IAAK,KACH1B,EAAU,YAAInC,GACX8D,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAgBG,EAAEH,OACtC,MACF,QAAS1B,EAAU,YAAInC,IAEzB4C,EAAaU,IAAI,SAAUO,GAC3BnB,EAAQa,KAAK,CAAET,OAAQF,EAAaY,cAmDjCxD,OAAQiD,EACR/C,aAtCe,SAACM,GACnB2B,EAAU,YAAInC,GAAQkD,QAAO,SAAA5C,GAAM,OAAGA,EAAOE,KAAKA,WCTvC0D,EAzCM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASlE,EAA6B,EAA7BA,UAAUmE,EAAmB,EAAnBA,aACzC,OACE,6BACE,yBAAKjE,UAAU,kBACb,2BAAOA,UAAU,qBACf,+BACE,4BACE,wBAAIC,QAAS,kBAAMH,EAAU,QAA7B,MACA,wBAAIG,QAAS,kBAAMH,EAAU,WAA7B,QACA,wBAAIG,QAAS,kBAAMH,EAAU,eAA7B,YACA,wBAAIG,QAAS,kBAAMH,EAAU,cAA7B,qBAGJ,+BACGkE,EAAQ9D,KAAI,SAACgE,GAAD,OACX,wBAAI9D,IAAK8D,EAAM7D,IACb,4BAAK6D,EAAM7D,IACX,gCAAM6D,EAAMC,OACZ,4BAAMD,EAAME,WACZ,4BAAMF,EAAMG,UACZ,wBAAIpE,QAAS,kBAAIgE,EAAaC,EAAM7D,MAClC,uBAAGL,UAAU,0BAEf,4BACE,uBAAGS,MAAM,wBCyCZuD,EApEC,CACZ,CACI3D,GAAI,EACJ8D,MAAO,WACPC,UAAW,OACXC,SAAU,WAEZ,CAEEhE,GAAI,EACJ8D,MAAO,eACPC,UAAW,OACXC,SAAU,WAEZ,CACEhE,GAAI,EACJ8D,MAAO,QACPC,UAAW,QACXC,SAAU,WAEZ,CAEEhE,GAAI,EACJ8D,MAAO,OACPC,UAAW,OACXC,SAAU,WAEZ,CAEEhE,GAAI,EACJ8D,MAAO,SACPC,UAAW,QACXC,SAAU,WAEZ,CACEhE,GAAI,EACJ8D,MAAO,KACPC,UAAW,OACXC,SAAU,WAEZ,CACEhE,GAAI,EACJ8D,MAAO,MACPC,UAAW,QACXC,SAAU,WAEZ,CACEhE,GAAI,EACJ8D,MAAO,gBACPC,UAAW,QACXC,SAAU,WAEZ,CAEEhE,GAAI,EACJ8D,MAAO,OACPC,UAAW,OACXC,SAAU,WAEZ,CAEEhE,GAAI,GACJ8D,MAAO,MACPC,UAAW,OACXC,SAAU,YCPHC,E,YAtDb,aAAe,IAAD,8BACZ,+CACK1D,WAAa,EAAKA,WAAWC,KAAhB,gBAFN,E,wEAKHC,GACTA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbkD,EAAQnD,EAAKE,SAAL,MAAuBC,MAC/BiD,EAAYpD,EAAKE,SAAL,UAA2BC,MACvCkD,EAAWrD,EAAKE,SAAL,SAA0BC,MAC3CC,KAAKC,MAAMC,UAAU6C,EAAOC,EAAWC,GACvCrD,EAAKO,U,+BAIL,OACE,0BAAMC,SAAUJ,KAAKR,YACnB,yBAAKH,MAAM,YACX,2BACEJ,GAAG,QACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,UACZC,UAAQ,KAGV,yBAAKnB,MAAM,YACX,2BACEJ,GAAG,YACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,gBACZC,UAAQ,KAGV,yBAAKnB,MAAM,YACV,2BACCJ,GAAG,WACHoB,KAAK,OACLC,aAAa,GACbC,YAAY,cAGd,4BAAQlB,MAAM,kBACdgB,KAAK,UACX,uBAAGhB,MAAM,kBAFH,Y,GA7CiBoB,aC4FV0C,EAtFK,WAClBxC,qBAAU,WACPyC,EAASR,KAET,IAJqB,MAME/B,mBAAS,IANX,mBAMjBiC,EANiB,KAMVM,EANU,KAQlBC,EAAW,SAACN,EAAOC,EAAUC,GACjCG,GAAS,SAAAE,GAAU,4BAASA,GAAT,CAAqB,CACtCP,QAAOC,YAAWC,WAClBhE,GACE8B,KAAKC,IAAL,MAAAD,KAAI,YAAQuC,EAAWxE,KAAI,SAAAC,GAAM,OAAIA,EAAOE,QAAO,SAwBnDgC,EAAWC,cACXC,EAAUC,cACVC,EAAe,IAAIC,gBAAgBL,EAASM,QAE5CC,EAAQH,EAAaI,IAAI,UAAY,GAerC8B,EAAgB/B,EAFpBsB,EAAMnB,QAAO,SAAA6B,GAAC,OAAKA,EAAET,OAAS,IAAInB,cAAcC,SAASL,MAEhC,YAAyBsB,GAEpD,OACE,6BACE,yBAAKlE,UAAU,sBACb,2BACEyB,KAAK,OACLE,YAAY,YACZR,MAAOyB,EACPM,SAvBiB,SAACpC,GACxB2B,EAAaU,IAAI,QAASrC,EAAMG,OAAOE,MAAM6B,eAC7CT,EAAQa,KAAK,CACXT,OAAQF,EAAaY,gBAsBnB,uBAAGrD,UAAU,gBAEf,kBAAC,IAAD,KACA,uBAAGA,UAAU,sBACX,kBAAC,IAAD,CAASA,UAAU,OAAOsD,GAAG,qBAAqBC,OAAK,GAAvD,QAEF,kBAAC,IAAD,CACUC,KAAK,qBACLC,OAAQ,kBACN,kBAAC,EAAD,CACCnC,UAAWmD,QAKxB,kBAAC,EAAD,CAAc3E,UAhEA,SAAC4D,GACjB,OAAQA,GACN,IAAK,QACL,IAAK,YACH,IAAK,WACLc,EAAS,YAAIN,GACVP,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAcI,cAAcD,EAAEH,QAClD,MACF,IAAK,KACHc,EAAS,YAAIN,GACVP,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAgBG,EAAEH,OACtC,MACF,QAASc,EAAS,YAAIN,IAGxBzB,EAAaU,IAAI,SAAUO,GAC3BnB,EAAQa,KAAK,CAAET,OAAQF,EAAaY,cAgDEW,QAASW,EAAeV,aAjC5C,SAAC5D,GACnBmE,EAAS,YAAIN,GAAOnB,QAAO,SAAA8B,GAAI,OAAGA,EAAKxE,KAAKA,WCtBjCyE,EA5BH,kBACV,yBAAK9E,UAAU,OACb,qCACA,kBAAC,IAAD,KACE,uBAAGA,UAAU,sBACX,kBAAC,IAAD,CAASA,UAAU,OAAOsD,GAAG,IAAIC,OAAK,GAAtC,QACA,kBAAC,IAAD,CAASvD,UAAU,OAAOsD,GAAG,WAAWC,OAAK,GAA7C,WACA,kBAAC,IAAD,CAASD,GAAG,SAASC,OAAK,EAACvD,UAAU,QAArC,UAEF,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIwD,KAAK,IACLD,OAAK,EACLE,OAAQ,kBACN,6BACE,wBAAIzD,UAAU,QAAd,QACA,yBAAKA,UAAU,cAIrB,kBAAC,IAAD,CAAOwD,KAAK,YAAYuB,UAAWR,IACnC,kBAAC,IAAD,CAAOf,KAAK,UAAUuB,UAAWjD,QChBrBkD,QACW,cAA7BC,OAAO5C,SAAS6C,UAEe,UAA7BD,OAAO5C,SAAS6C,UAEhBD,OAAO5C,SAAS6C,SAASC,MACvB,2DCZNC,IAAS3B,OAAO,kBAAC,EAAD,MAAS4B,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8f170f09.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst TablePeople = ({ people, setSortBy, deletePeople}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"people_table\">\r\n        <table className=\"ui inverted table\">\r\n          <thead>\r\n            <tr>\r\n              <td onClick={() => setSortBy('id')}>Id</td>\r\n              <td onClick={() => setSortBy('name')}>Name</td>\r\n              <td onClick={() => setSortBy('email')}>Email</td>\r\n              <td onClick={() => setSortBy('username')}>user_name</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {people.map((person) => (\r\n              <tr key={person.id}>\r\n                <td>{person.id}</td>\r\n                <td> {person.name}</td>\r\n                <td> {person.email}</td>\r\n                <td >{person.username}</td>\r\n                <td onClick={()=>deletePeople(person.id)}>\r\n                <i className=\"trash alternate icon\" />\r\n                </td>\r\n                <td>\r\n                  <i class=\"edit icon\"></i>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTablePeople.propTypes = {\r\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setSortBy: PropTypes.func.isRequired,\r\n  deletePeople: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TablePeople;\r\n","const users = [\r\n    {\r\n      id: 1,\r\n      name: 'Leanne Graham',\r\n      username: 'Bret',\r\n      email: 'Sincere@april.biz',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Ervin Howell',\r\n      username: 'Antonette',\r\n      email: 'Shanna@melissa.tv',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Clementine Bauch',\r\n      username: 'Samantha',\r\n      email: 'Nathan@yesenia.net',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Patricia Lebsack',\r\n      username: 'Karianne',\r\n      email: 'Julianne.OConner@kory.org',\r\n      \r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Chelsey Dietrich',\r\n      username: 'Kamren',\r\n      email: 'Lucio_Hettinger@annie.ca',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Mrs. Dennis Schulist',\r\n      username: 'Leopoldo_Corkery',\r\n      email: 'Karley_Dach@jasper.info',\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Kurtis Weissnat',\r\n      username: 'Elwyn.Skiles',\r\n      email: 'Telly.Hoeger@billy.biz',\r\n     \r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Nicholas Runolfsdottir V',\r\n      username: 'Maxime_Nienow',\r\n      email: 'Sherwood@rosamond.me',\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Glenna Reichert',\r\n      username: 'Delphine',\r\n      email: 'Chaim_McDermott@dana.io',\r\n     \r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Clementina DuBuque',\r\n      username: 'Moriah.Stanton',\r\n      email: 'Rey.Padberg@karina.biz',\r\n      \r\n    },\r\n  ];\r\n  \r\n  export default users;","import React, { Component } from \"react\";\r\n\r\nclass NewPerson extends Component {\r\n  constructor() {\r\n    super();\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n  }\r\n\r\n  formSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const name = form.elements[\"name\"].value;\r\n    const email = form.elements[\"email\"].value;\r\n    const username = form.elements[\"username\"].value;\r\n    this.props.addPerson(name, email,username);\r\n    form.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmit}>\r\n        <div class=\"ui input\">\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"Name...\"\r\n          required\r\n        />\r\n        </div> \r\n        <div class=\"ui input\">\r\n        <input\r\n          id=\"email\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"Email...\"\r\n          required\r\n        />\r\n        </div>\r\n        <div class=\"ui input\">\r\n         <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"user_name\"\r\n        />\r\n        </div>\r\n        <button class=\"ui basic button\" \r\n        type=\"submit\">\r\n  <i class=\"icon user\"></i>\r\n  Add \r\n</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPerson","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport TablePeople from './TablePeople';\r\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\r\nimport users from '../../api/users';\r\nimport NewPerson from './NewPerson';\r\n\r\nconst PeoplePage = () => {\r\n  useEffect(() => {\r\n     setPeople(users);  \r\n  }, []);\r\n\r\n  const [people, setPeople] = useState([]);\r\n \r\n\r\n  const addPerson=(name, email,username)=> {\r\n    setPeople(prevPeople=> ([...prevPeople, {\r\n      name, email,username,\r\n      id:\r\n        Math.max(...prevPeople.map(person => person.id)) + 1,\r\n    }]));\r\n  }\r\n\r\n  const setSortBy = (selectParams) => {\r\n    switch (selectParams) {\r\n      case 'name':\r\n      case 'username':\r\n      case 'email':\r\n        setPeople([...people]\r\n          .sort((a, b) => a[selectParams].localeCompare(b[selectParams])));\r\n        break;\r\n      case 'id':\r\n        setPeople([...people]\r\n          .sort((a, b) => a[selectParams] - b[selectParams]));\r\n        break;\r\n      default: setPeople([...people]);\r\n    }\r\n    searchParams.set('sortBy', selectParams);\r\n    history.push({ search: searchParams.toString() });\r\n  };\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  const query = searchParams.get('query') || '';\r\n  const handleInputQuery = (event) => {\r\n    searchParams.set('query', event.target.value.toLowerCase());\r\n    history.push({\r\n      search: searchParams.toString(),\r\n    });\r\n  };\r\n  const deletePeople =(id)=>{\r\n    setPeople([...people].filter(person=> person.id!==id))\r\n  }\r\n    \r\n  \r\n \r\n  const searchPeople = () => (\r\n    people.filter(person => (person.name || '').toLowerCase().includes(query)));\r\n\r\n  const visiblePeople = query ? searchPeople() : [...people];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui left icon input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={query}\r\n          onChange={handleInputQuery}\r\n        />\r\n        <i className=\"users icon\" />\r\n      </div>\r\n      <HashRouter>\r\n      <p className=\"ui secondary  menu\" >\r\n        <NavLink className=\"item\" to=\"/users/new_user\" exact >Add</NavLink>\r\n      </p>\r\n      <Route\r\n                path=\"/users/new_user\"\r\n                render={() => (\r\n                  <NewPerson\r\n                   addPerson={addPerson}\r\n                  />\r\n                )}\r\n              />\r\n    </HashRouter>\r\n      <TablePeople \r\n      setSortBy={setSortBy}\r\n       people={visiblePeople}\r\n       deletePeople={deletePeople} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default PeoplePage","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableCourses = ({ courses, setSortBy,deleteCourse }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"people_table g\">\r\n        <table className=\"ui inverted table\">\r\n          <thead>\r\n            <tr>\r\n              <td onClick={() => setSortBy('id')}>Id</td>\r\n              <td onClick={() => setSortBy('title')}>Name</td>\r\n              <td onClick={() => setSortBy('completed')}>Open set</td>\r\n              <td onClick={() => setSortBy('duration')}>Course duration</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {courses.map((cours) => (\r\n              <tr key={cours.id}>\r\n                <td>{cours.id}</td>\r\n                <td> {cours.title}</td>\r\n                <td >{cours.completed}</td>\r\n                <td >{cours.duration}</td>\r\n                <td onClick={()=>deleteCourse(cours.id)}>\r\n                  <i className=\"trash alternate icon\" />\r\n                </td>\r\n                <td>\r\n                  <i class=\"edit icon\"></i>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nTableCourses.propTypes = {\r\n  courses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setSortBy: PropTypes.func.isRequired,\r\n  deleteCourse: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TableCourses;\r\n","const courses = [\r\n    {\r\n        id: 1,\r\n        title: 'HTML/CSS',\r\n        completed: 'Open',\r\n        duration: '3 month'\r\n      },\r\n      {\r\n       \r\n        id: 2,\r\n        title: 'Java-Script ',\r\n        completed: 'Open',\r\n        duration: '6 month'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'UI/UX',\r\n        completed: 'Close',\r\n        duration: '4 month'\r\n      },\r\n      {\r\n      \r\n        id: 4,\r\n        title: 'JAVA',\r\n        completed: 'Open',\r\n        duration: '9 month'\r\n      },\r\n      {\r\n     \r\n        id: 5,\r\n        title: 'Python',\r\n        completed: 'Close',\r\n        duration: '6 month'\r\n      },\r\n      {\r\n        id: 6,\r\n        title: 'PM',\r\n        completed: 'Open',\r\n        duration: '3 month'\r\n      },\r\n      {\r\n        id: 7,\r\n        title: 'C++',\r\n        completed: 'Close',\r\n        duration: '9 month'\r\n      },\r\n      {\r\n        id: 8,\r\n        title: 'Angular/React',\r\n        completed: 'Close',\r\n        duration: '3 month'\r\n      },\r\n      {\r\n      \r\n        id: 9,\r\n        title: 'Ruby',\r\n        completed: 'Open',\r\n        duration: '5 month'\r\n      },\r\n      {\r\n      \r\n        id: 10,\r\n        title: 'PHP',\r\n        completed: 'Open',\r\n        duration: '6 month'\r\n      },\r\n    \r\n]\r\nexport default courses;","import React, { Component } from \"react\";\r\n\r\nclass NewCourses extends Component {\r\n  constructor() {\r\n    super();\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n  }\r\n\r\n  formSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const title = form.elements[\"title\"].value;\r\n    const completed = form.elements[\"completed\"].value;\r\n    const duration = form.elements[\"duration\"].value;\r\n    this.props.addPerson(title, completed, duration);\r\n    form.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmit}>\r\n        <div class=\"ui input\">\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"Name...\"\r\n          required\r\n        />\r\n        </div> \r\n        <div class=\"ui input\">\r\n        <input\r\n          id=\"completed\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"Open/Close...\"\r\n          required\r\n        />\r\n        </div>\r\n        <div class=\"ui input\">\r\n         <input\r\n          id=\"duration\"\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          placeholder=\"duration\"\r\n        />\r\n        </div>\r\n        <button class=\"ui basic button\" \r\n        type=\"submit\">\r\n  <i class=\"keyboard icon\"></i>\r\n  Add \r\n</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCourses;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport TableCourses from './TableCourses';\r\nimport courses from '../../api/courses';\r\nimport NewCourses from './NewCourses';\r\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\r\n\r\n\r\nconst CoursesPage = () => {\r\n  useEffect(() => {\r\n     setCours(courses);\r\n     \r\n  }, []);\r\n\r\n  const [cours, setCours] = useState([]);\r\n\r\n  const addCourses=(title, completed,duration)=> {\r\n    setCours(prevCourse => ([...prevCourse, {\r\n      title, completed, duration,\r\n      id:\r\n        Math.max(...prevCourse.map(person => person.id)) + 1,\r\n    }]));\r\n  }\r\n  \r\n\r\n  const setSortBy = (selectParams) => {\r\n    switch (selectParams) {\r\n      case 'title':\r\n      case 'completed':\r\n        case 'duration':\r\n        setCours([...cours]\r\n          .sort((a, b) => a[selectParams].localeCompare(b[selectParams])));\r\n        break;\r\n      case 'id':\r\n        setCours([...cours]\r\n          .sort((a, b) => a[selectParams] - b[selectParams]));\r\n        break;\r\n      default: setCours([...cours]);\r\n    }\r\n\r\n    searchParams.set('sortBy', selectParams);\r\n    history.push({ search: searchParams.toString() });\r\n  };\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  const query = searchParams.get('query') || '';\r\n  const handleInputQuery = (event) => {\r\n    searchParams.set('query', event.target.value.toLowerCase());\r\n    history.push({\r\n      search: searchParams.toString(),\r\n    });\r\n  };\r\n\r\n  const deleteCourse =(id)=>{\r\n    setCours([...cours].filter(item=> item.id!==id))\r\n  }\r\n\r\n  const searchCourses = () => (\r\n    cours.filter(i => (i.title || '').toLowerCase().includes(query)));\r\n\r\n  const visibleCourse = query ? searchCourses() : [...cours];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui left icon input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={query}\r\n          onChange={handleInputQuery}\r\n        />\r\n        <i className=\"users icon\" />\r\n      </div>\r\n      <HashRouter>\r\n      <p className=\"ui secondary  menu\" >\r\n        <NavLink className=\"item\" to=\"/courses/new_cours\" exact >Add</NavLink>\r\n      </p>\r\n      <Route\r\n                path=\"/courses/new_cours\"\r\n                render={() => (\r\n                  <NewCourses\r\n                   addPerson={addCourses}\r\n                  />\r\n                )}\r\n              />\r\n    </HashRouter>\r\n      <TableCourses setSortBy={setSortBy} courses={visibleCourse} deleteCourse={deleteCourse} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoursesPage;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, NavLink, HashRouter } from 'react-router-dom';\nimport PeoplePage from './components/Users/PeoplePage'\nimport CoursesPage   from './components/Courses/CoursesPage'\n//import NewCourses   from './NewCourses'\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Table</h1>\n    <HashRouter>\n      <p className=\"ui secondary  menu\">\n        <NavLink className=\"item\" to=\"/\" exact>Home</NavLink>\n        <NavLink className=\"item\" to=\"/courses\" exact>Courses</NavLink>\n        <NavLink to=\"/users\" exact className=\"item\">Users</NavLink>\n      </p>\n      <Switch>\n      <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <div>\n              <h1 className=\"home\">Home</h1>\n              <div className=\"image\" />\n            </div>\n          )}\n        />\n        <Route path=\"/courses/\" component={CoursesPage} />\n        <Route path=\"/users/\" component={PeoplePage} />\n        \n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n /*<NavLink className=\"item\" to=\"/courses/new_cours\" exact>Add</NavLink>\n <Route path=\"/courses/new_cours\" component={NewCourses} />*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}